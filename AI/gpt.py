#AI/gpt.py
from openai import OpenAI
from config import Config

client = OpenAI(api_key=Config.OPENAI_API_KEY)

# SYSTEM_PROMPT = """
# У тебя задача вести диалог по созданию события. 

# Твои действия:
# 1. Обнови JSON, добавив новый ключ (если это был ответ).
# 2. Если ещё есть незаполненные поля — задай новый вопрос.
# 3. Если всё заполнено — напиши "Готово" и отдай финальный JSON.
# """


SYSTEM_PROMPT = """
Твоя задача - создание событий. ты собирайешь информацию и переводишь ее в csv
Формат базы: name, date+time (спрашивай отдельно, но сохраняй в mon/day/yr/hr/min/sec и форматируй в timestamp), место, адрес (если считаешь нужным, сначала ищи, где находится место), additional (если считаешь нужным)
Если пользователь указал время в 12ч. формате, уточни день это или вечер. Дату тоже анализируй, отталкиваясь от сегодняшнего дня. Когда все готово напиши "готово" и отправь мне текст с json
Все вопросы задавай отдельно, коротко и дружелюбно. Веди себя как друг, не нужно формальных сообщений и точных вопросов, весь диалог должен быть в формате простой беседы, ничего вроде: "какое название у события" быть не должно. Пользователь не должен помнить, что общается с нейросетью. 
Начни с вопроса про название
"""

def get_gpt_response(messages: list[dict]) -> str:
    try:
        full_messages = [{"role": "system", "content": SYSTEM_PROMPT}] + messages  # ✅ Списки объединяются правильно

        response = client.chat.completions.create(
            model="gpt-4o",
            messages=full_messages
        )

        reply = response.choices[0].message.content.strip()
        return reply
    except Exception as e:
        return f"Ошибка при запросе к OpenAI: {str(e)}"
